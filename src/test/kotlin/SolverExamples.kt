import org.junit.jupiter.api.Test
import solver.NakedPair
import solver.SudokuSolver
import kotlin.test.assertEquals

class SolverExamples {
    @Test
    fun nakedPair() {
        val sudoku = SudokuState.from(
            """
            (3/4/6)            |(4/8/9)            |         1         |         5         |(2/3/6/8)          |(2/3)              |(2/4/6/9)          |(2/6/9)            |         7         
            (3/5/6)            |(5/7/8/9)          |(7/9)              |         4         |(2/3/6/8)          |(2/3/7)            |(2/5/6/9)          |(2/5/6/9)          |         1         
            (4/5/6)            |(4/5/7)            |         2         |         9         |(1/6)              |(1/7)              |(4/5/6)            |         3         |         8         
            ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                     9         |         2         |         5         |         8         |         4         |         6         |(1/7)              |(1/7)              |         3         
                     1         |(3/6)              |         8         |         7         |(2/3/5/9)          |(2/3/5/9)          |(2/5/6/9)          |         4         |(2/6)              
                     7         |(3/6)              |         4         |(1/2/3)            |(1/2/3/5/9)        |(1/2/3/5/9)        |         8         |(2/5/6/9)          |(2/6)              
            ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
            (4/5)              |(4/5)              |         3         |         6         |         7         |         8         |(1/2)              |(1/2)              |         9         
                     8         |         1         |(7/9)              |(2/3)              |(2/3/5/9)          |(2/3/5/9)          |(3/6/7)            |(6/7)              |         4         
                     2         |(7/9)              |         6         |(1/3)              |(1/3/9)            |         4         |(3/7)              |         8         |         5         
        """.trimIndent()
        )

        val solver = SudokuSolver(NakedPair)
        val solveResult = solver.solve(sudoku)

        val expectedResult = SudokuState.from(
            """
            (3/4/6)            |(4/8/9)            |         1         |         5         |(2/3/6/8)          |(2/3)              |(2/4/6/9)          |(2/6/9)            |         7         
            (3/5/6)            |(5/7/8/9)          |(7/9)              |         4         |(2/3/6/8)          |(2/3/7)            |(2/5/6/9)          |(2/5/6/9)          |         1         
            (4/5/6)            |(4/5/7)            |         2         |         9         |(1/6)              |(1/7)              |(4/5/6)            |         3         |         8         
            ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                     9         |         2         |         5         |         8         |         4         |         6         |(1/7)              |(1/7)              |         3         
                     1         |(3/6)              |         8         |         7         |(2/3/5/9)          |(2/3/5/9)          |(5/9)              |         4         |(2/6)              
                     7         |(3/6)              |         4         |(1/2/3)            |(1/2/3/5/9)        |(1/2/3/5/9)        |         8         |(5/9)              |(2/6)              
            ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
            (4/5)              |(4/5)              |         3         |         6         |         7         |         8         |(1/2)              |(1/2)              |         9         
                     8         |         1         |(7/9)              |(2/3)              |(2/3/5/9)          |(2/3/5/9)          |(3/6/7)            |(6/7)              |         4         
                     2         |(7/9)              |         6         |(1/3)              |(1/3/9)            |         4         |(3/7)              |         8         |         5         
        """.trimIndent()
        )
        assertEquals(expectedResult, solveResult.state)
        assertEquals(1, solveResult.methodsUsedCounter[NakedPair.name])
    }
}
